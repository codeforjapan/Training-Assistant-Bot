services:
  db:
    image: postgis/postgis:16-3.4
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_DB: ${DATABASE_NAME}
      TZ: Asia/Tokyo
    volumes:
      - ${DATA_DIRECTORY}/db:/var/lib/postgresql/data

  redis:
    image: redis:7

  api:
    build:
      context: ./server
      target: dev
    ports:
      - "3333:3333"
    depends_on:
      - db
      - redis
    environment:
      TZ: Asia/Tokyo
      PORT: ${PORT}
      NODE_ENV: ${NODE_ENV}
      SESSION_SECRET: ${SESSION_SECRET}
      FILE_STORE_PATH: ${FILE_STORE_PATH}
      TOKEN_SECRET: ${TOKEN_SECRET}
      LINE_TOKEN: ${LINE_TOKEN}
      LINE_SECRET: ${LINE_SECRET}
      LINE_ALLOW_BROADCAST: ${LINE_ALLOW_BROADCAST}
      LINE_REPORT_KEYWORD: ${LINE_REPORT_KEYWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      REDIS_HOST: redis
    command: [ "./wait-for-postgres.sh","./docker-entrypoint.sh" ]
    volumes:
      - ./server/src:/app/src
      - ./server/test:/app/test
      - ./server/logs:/app/logs
      - ${DATA_DIRECTORY}/app:/data

  dashboard:
    build:
      context: ./dashboard
      target: dev
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./dashboard:/app
      - /app/node_modules
      - /app/.nuxt

  nginx:
    image: nginx:1.19
    ports:
      - "8080:8080"
    depends_on:
      - api
      - dashboard
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/templates/default.conf.template:ro
    environment:
      - NGINX_PORT=8080
      - SERVER_HOST=api
      - DASHBOARD_HOST=dashboard

networks:
  kobe_botlab:
    external: true